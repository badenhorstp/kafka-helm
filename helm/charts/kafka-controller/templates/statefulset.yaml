apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kafka-controller.fullname" .}}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    {{- include "kafka-controller.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "kafka-controller.headlessServiceName" . }}
  replicas: {{ default 3 .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kafka-controller.selectorLabels" . | nindent 6 }}
  template:
      metadata:
        labels:
          {{- include "kafka-controller.selectorLabels" . | nindent 10 }}
      spec:
        serviceAccountName: {{ include "kafka-controller.serviceAccountName" . }}
        {{- if .Values.podSecurityContext }}
        securityContext: 
        {{- toYaml .Values.podSecurityContext | nindent 10 }}
        {{- end}}
        containers:
        - name: {{ include "kafka-controller.name" . }}-broker
          image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext }}
          securityContext: 
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          ports:
          - containerPort: {{ .Values.service.port }}
            name: {{ .Values.service.name }}
          {{- $headlessName := include "kafka-controller.headlessServiceName" . -}}
          {{- $fullname := include "kafka-controller.fullname" . -}}
          {{- $namespace := .Values.namespace -}}
          {{- $cnt := (int .Values.replicaCount) -}}
          {{- $port := 0 -}}
          {{- range .Values.headless -}}
            {{- if eq .name "kafka-controller" -}}
              {{- $port = .port -}}
            {{- end}}
          {{- end}}
          env:          
          - name: KAFKA_CONTROLLER_QUORUM_VOTERS
            value: {{range $i := until $cnt}}{{$i}}@{{$fullname}}-{{$i}}.{{$headlessName}}.{{$namespace}}:{{$port}}{{if ne $i (sub $cnt 1)}},{{end}}{{end}}
          {{- if .Values.refEnvironment}}
          {{- range $key, $value := .Values.refEnvironment}}
          - name: {{ $key }}
            valueFrom:
              fieldRef:
                fieldPath: {{ $value }}
          {{- end}}     
          {{- end}}
          envFrom:
          - configMapRef:
              name: {{ include "kafka-controller.configMapName" . }}
          {{- if .Values.command }}
          command:          
            {{- toYaml .Values.command | nindent 10}}
          {{- end}}
          {{- if .Values.volumeMounts}}
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 10}}
          {{- end}}
        {{- if .Values.imagePullSecrets }}
        imagePullSecrets:
          {{- toYaml .Values.imagePullSecrets | nindent 10}}
        {{- end}}
  {{- if .Values.volumeClaimTemplates}}
  volumeClaimTemplates:
    {{- toYaml .Values.volumeClaimTemplates | nindent 2}}
  {{- end}}

